import logging
from dataclasses import dataclass
from homeassistant.components.number import NumberEntityDescription
from homeassistant.components.select import SelectEntityDescription
from homeassistant.components.button import ButtonEntityDescription
from pymodbus.payload import BinaryPayloadBuilder, BinaryPayloadDecoder, Endian
from custom_components.solax_modbus.const import *
from time import time

_LOGGER = logging.getLogger(__name__)

""" ============================================================================================
bitmasks  definitions to characterize inverters, ogranized by group
these bitmasks are used in entitydeclarations to determine to which inverters the entity applies
within a group, the bits in an entitydeclaration will be interpreted as OR
between groups, an AND condition is applied, so all gruoups must match.
An empty group (group without active flags) evaluates to True.
example: GEN3 | GEN4 | X1 | X3 | EPS 
means:  any inverter of tyoe (GEN3 or GEN4) and (X1 or X3) and (EPS)
An entity can be declared multiple times (with different bitmasks) if the parameters are different for each inverter type
"""

GEN            = 0x0001 # base generation for MIC, PV, AC
GEN2           = 0x0002
GEN3           = 0x0004
GEN4           = 0x0008
SPF            = 0x0010
ALL_GEN_GROUP  = GEN2 | GEN3 | GEN4 | GEN | SPF

X1             = 0x0100
X3             = 0x0200
ALL_X_GROUP    = X1 | X3

PV             = 0x0400 # Needs further work on PV Only Inverters
AC             = 0x0800
HYBRID         = 0x1000
MIC            = 0x2000
ALL_TYPE_GROUP = PV | AC | HYBRID | MIC

EPS            = 0x8000
ALL_EPS_GROUP  = EPS

DCB            = 0x10000 # dry contact box - gen4
ALL_DCB_GROUP  = DCB

MPPT3          = 0x40000
MPPT4          = 0x80000
MPPT6          = 0x100000
MPPT8          = 0x200000
MPPT10         = 0x400000
ALL_MPPT_GROUP = MPPT3 | MPPT4 | MPPT6 | MPPT8 | MPPT10

ALLDEFAULT = 0 # should be equivalent to HYBRID | AC | GEN2 | GEN3 | GEN4 | X1 | X3 

# ======================= end of bitmask handling code =============================================

SENSOR_TYPES = []

# ====================== find inverter type and details ===========================================

def _read_serialnr(hub, address):
    res = None
    try:
        inverter_data = hub.read_holding_registers(unit=hub._modbus_addr, address=address, count=6)
        if not inverter_data.isError(): 
            decoder = BinaryPayloadDecoder.fromRegisters(inverter_data.registers, byteorder=Endian.BIG)
            res = decoder.decode_string(12).decode("ascii")
            hub.seriesnumber = res    
    except Exception as ex: _LOGGER.warning(f"{hub.name}: attempt to read firmware failed at 0x{address:x}", exc_info=True)
    if not res: _LOGGER.warning(f"{hub.name}: reading firmware number from address 0x{address:x} failed; other address may succeed")
    _LOGGER.info(f"Read {hub.name} 0x{address:x} firmware number before potential swap: {res}")
    return res

# =================================================================================================

@dataclass
class GrowattModbusButtonEntityDescription(BaseModbusButtonEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class GrowattModbusNumberEntityDescription(BaseModbusNumberEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class GrowattModbusSelectEntityDescription(BaseModbusSelectEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class GrowattModbusSensorEntityDescription(BaseModbusSensorEntityDescription):
    """A class that describes Growatt Modbus sensor entities."""
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice
    order16: int = Endian.BIG
    order32: int = Endian.BIG
    unit: int = REGISTER_U16
    register_type: int= REG_HOLDING

# ====================================== Computed value functions  =================================================

def value_function_timingmode(initval, descr, datadict):
    return  [ ('timed_charge_start_h', datadict.get('timed_charge_start_h', 0), ),
              ('timed_charge_start_m', datadict.get('timed_charge_start_m', 0), ),
              ('timed_charge_end_h', datadict.get('timed_charge_end_h', 0), ),
              ('timed_charge_end_m', datadict.get('timed_charge_end_m', 0), ),
              ('timed_discharge_start_h', datadict.get('timed_discharge_start_h', 0), ),
              ('timed_discharge_start_m', datadict.get('timed_discharge_start_m', 0), ),
              ('timed_discharge_end_h', datadict.get('timed_discharge_end_h', 0), ),
              ('timed_discharge_end_m', datadict.get('timed_discharge_end_m', 0), ),
            ]

def value_function_today_solar_energy(initval, descr, datadict):
    return  datadict.get('today_pv1_solar_energy', 0) + datadict.get('today_pv2_solar_energy',0) + datadict.get('today_pv3_solar_energy',0) + datadict.get('today_pv4_solar_energy',0)

def value_function_combined_battery_power(initval, descr, datadict):
    return  datadict.get('battery_charge_power', 0) - datadict.get('battery_discharge_power',0) 

# ================================= Button Declarations ============================================================

BUTTON_TYPES = [
    GrowattModbusButtonEntityDescription( 
        name = "Sync RTC",
        key = "sync_rtc",
        register = 45,
        allowedtypes = ALL_GEN_GROUP,
        write_method = WRITE_MULTI_MODBUS,
        icon = "mdi:home-clock",
        value_function = value_function_sync_rtc_ymd,
    ),
]

# ================================= Number Declarations ============================================================

NUMBER_TYPES = [
    ###
    #
    # Data only number types
    #
    ###

    ###
    #
    #  Normal number types
    #
    ###
    GrowattModbusNumberEntityDescription(
        name = "Grid Export Limit",
        key = "grid_export_limit",
        register = 123,
        fmt = "i",
        scale = 0.1,
        native_min_value = -100,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN | GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:transmission-tower-export",
    ),
    GrowattModbusNumberEntityDescription(
        name = "Battery Minimum Capacity",
        key = "battery_minimum_capacity",
        register = 1071,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        state = "battery_minimum_capacity",
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-sync",
    ),
    GrowattModbusNumberEntityDescription(
        name = "Charger Upper SOC",
        key = "Charger_upper_soc", 
        register = 1091,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-sync",
    ),
    GrowattModbusNumberEntityDescription(
        name = "Charger Upper SOC",
        key = "Charger_upper_soc", 
        register = 3048,
        native_min_value = 0,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
        icon = "mdi:battery-sync",
    ),
]

# ================================= Select Declarations ============================================================

SELECT_TYPES = [
    ###
    #
    #  Data only select types
    #
    ###

    ###
    #
    #  Normal select types
    #
    ###
    GrowattModbusSelectEntityDescription(
        name = "Limit Grid Export",
        key = "limit_grid_export",
        register = 122,
        option_dict = {
                0: "Disabled",
                1: "Meter 1",
                2: "Meter 2",
                3: "CT Clamp", },
        allowedtypes = GEN | GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:transmission-tower-export",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Start Time 1",
        key = "grid_start_time_1",
        register = 1080,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid End Time 1",
        key = "grid_end_time_1",
        register = 1081,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Time 1",
        key = "grid_time_1",
        register = 1082,
        option_dict = {  
                0: "Disabled",
                1: "Enabled", },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Start Time 2",
        key = "grid_start_time_2",
        register = 1083,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid End Time 2",
        key = "grid_end_time_2",
        register = 1084,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Time 2",
        key = "grid_time_2",
        register = 1085,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Start Time 3",
        key = "grid_start_time_3",
        register = 1086,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid End Time 3",
        key = "grid_end_time_3",
        register = 1087,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Grid Time 3",
        key = "grid_time_3",
        register = 1088,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Switch",
        key = "charger_switch",
        register = 1092,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Start Time 1",
        key = "charger_start_time_1",
        register = 1100,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger End Time 1",
        key = "charger_end_time_1",
        register = 1101,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Time 1",
        key = "charger_time_1",
        register = 1102,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Start Time 2",
        key = "charger_start_time_2",
        register = 1103,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger End Time 2",
        key = "charger_end_time_2",
        register = 1104,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Time 2",
        key = "charger_time_2",
        register = 1105,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Start Time 3",
        key = "charger_start_time_3",
        register = 1106,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger End Time 3",
        key = "charger_end_time_3",
        register = 1107,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Time 3",
        key = "charger_time_3",
        register = 1108,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Start Time 1",
        key = "load_start_time_1",
        register = 1110,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load End Time 1",
        key = "load_end_time_1",
        register = 1111,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Time 1",
        key = "load_time_1",
        register = 1112,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Start Time 2",
        key = "load_start_time_2",
        register = 1113,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load End Time 2",
        key = "load_end_time_2",
        register = 1114,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Time 2",
        key = "load_time_2",
        register = 1115,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Start Time 3",
        key = "load_start_time_3",
        register = 1116,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load End Time 3",
        key = "load_end_time_3",
        register = 1117,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Load Time 3",
        key = "load_time_3",
        register = 1118,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "Charger Switch",
        key = "charger_switch",
        register = 3049,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = HYBRID | AC | GEN4,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSelectEntityDescription(
        name = "EPS Switch",
        key = "eps_switch",
        register = 3079,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = HYBRID | AC | GEN4 | EPS,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:dip-switch",
    ),
]

# ================================= Sennsor Declarations ============================================================

SENSOR_TYPES: list[GrowattModbusSensorEntityDescription] = [
    GrowattModbusSensorEntityDescription(
        name = "Firmware Version",
        key = "firmware_version",
        register = 9,
        unit = REGISTER_STR,
        wordcount=3,
        allowedtypes = ALL_GEN_GROUP,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:information",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Firmware Control Version",
        key = "firmware_control_version",
        register = 12,
        unit = REGISTER_STR,
        wordcount=3,
        allowedtypes = ALL_GEN_GROUP,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:information",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Language",
        key = "language",
        register = 15,
        scale = { 0: "Italiano",
                  1: "English",
                  2: "Deutsche",
                  3: "Espanol",
                  4: "Francais",
                  5: "Hanyu",
                  6: "Polskie",
                  7: "Portugues",
                  8: "Magyar nyelv", },
        allowedtypes = ALL_GEN_GROUP,
        entity_registry_enabled_default = False,
        icon = "mdi:translate-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Serial Number",
        key = "serialnumber",
        register = 23,
        unit = REGISTER_STR,
        wordcount=5,
        allowedtypes = ALL_GEN_GROUP,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:information",
    ),
    GrowattModbusSensorEntityDescription(
        name = "RTC",
        key = "rtc",
        register = 45,
        unit = REGISTER_WORDS,
        wordcount = 6,
        scale = value_function_rtc_ymd,
        allowedtypes = ALL_GEN_GROUP,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Limit Grid Export",
        key = "limit_grid_export",
        register = 122,
        scale = { 0: "Disabled",
                  1: "Meter 1",
                  2: "Meter 2",
                  3: "CT Clamp", },
        allowedtypes = GEN | GEN2 | GEN3 | GEN4,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:transmission-tower-export",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Export Limit",
        key = "grid_export_limit",
        native_unit_of_measurement = PERCENTAGE,
        register = 123,
        unit = REGISTER_S16,
        scale = 0.1,
        allowedtypes = GEN | GEN2 | GEN3 | GEN4,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:transmission-tower-export",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Type",
        key = "battery_type",
        register = 1048,
        scale = { 0: "Lithium",
                  1: "Lead Acid",
                  2: "Other", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:battery-unknown",
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Set Voltage",
        key = "eps_set_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1061,
        scale = { 0: "230",
                  1: "208",
                  2: "240" },
        allowedtypes = GEN | GEN2 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Set Frequency",
        key = "eps_set_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1062,
        scale = { 0: "50",
                  1: "60", },
        allowedtypes = GEN | GEN2 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Minimum Capacity",
        key = "battery_minimum_capacity",
        native_unit_of_measurement = PERCENTAGE,
        register = 1071,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-sync",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Start Time 1", 
        key = "grid_start_time_1",
        register = 1080,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid End Time 1", 
        key = "grid_end_time_1",
        register = 1081,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Time 1",
        key = "grid_time_1",
        register = 1082,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Start Time 2", 
        key = "grid_start_time_2",
        register = 1083,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid End Time 2", 
        key = "grid_end_time_2",
        register = 1084,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Time 2",
        key = "grid_time_2",
        register = 1085,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Start Time 3", 
        key = "grid_start_time_3",
        register = 1086,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid End Time 3", 
        key = "grid_end_time_3",
        register = 1087,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Time 3",
        key = "grid_time_3",
        register = 1088,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Upper SOC",
        key = "Charger_upper_soc", 
        register = 1091,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-sync",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Switch",
        key = "charger_switch",
        register = 1092,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Start Time 1", 
        key = "charger_start_time_1",
        register = 1100,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger End Time 1", 
        key = "charge_end_time_1",
        register = 1101,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Time 1",
        key = "charger_time_1",
        register = 1102,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Start Time 2", 
        key = "charger_start_time_2",
        register = 1103,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger End Time 2", 
        key = "charge_end_time_2",
        register = 1104,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Time 2",
        key = "charger_time_2",
        register = 1105,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Start Time 3", 
        key = "charger_start_time_3",
        register = 1106,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger End Time 3", 
        key = "charge_end_time_3",
        register = 1107,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Time 3",
        key = "charger_time_3",
        register = 1108,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Start Time 1", 
        key = "load_start_time_1",
        register = 1110,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load End Time 1", 
        key = "load_end_time_1",
        register = 1111,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Time 1",
        key = "load_time_1",
        register = 1112,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Start Time 2", 
        key = "load_start_time_2",
        register = 1113,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load End Time 2", 
        key = "load_end_time_2",
        register = 1114,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Time 2",
        key = "load_time_2",
        register = 1115,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Start Time 3", 
        key = "load_start_time_3",
        register = 1116,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load End Time 3", 
        key = "load_end_time_3",
        register = 1117,
        scale = value_function_sofartime,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-clock",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Load Time 3",
        key = "load_time_3",
        register = 1118,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    #GrowattModbusSensorEntityDescription(
    #    name = "Serial Number",
    #    key = "serialnumber",
    #    register = 3001,
    #    unit = REGISTER_STR,
    #    wordcount=5,
    #    entity_registry_enabled_default = False,
    #    allowedtypes = GEN4,
    #    entity_category = EntityCategory.DIAGNOSTIC,
    #    icon = "mdi:information",
    #),
    GrowattModbusSensorEntityDescription(
        name = "Charger Upper SOC",
        key = "Charger_upper_soc", 
        register = 3048,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = HYBRID | AC | GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-sync",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Charger Switch",
        key = "charger_switch",
        register = 3049,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = HYBRID | AC | GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Type",
        key = "battery_type",
        register = 3070,
        scale = { 0: "Lithium",
                  1: "Lead Acid",
                  2: "Other", },
        allowedtypes = HYBRID | AC | GEN4,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:battery-unknown",
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Switch",
        key = "eps_switch",
        register = 3079,
        scale = { 0: "Disabled",
                  1: "Enable", },
        allowedtypes = HYBRID | AC | GEN4 | EPS,
        entity_registry_enabled_default = False,
        icon = "mdi:dip-switch",
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Set Voltage",
        key = "eps_set_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3080,
        scale = { 0: "230",
                  1: "208",
                  2: "240" },
        allowedtypes = HYBRID | AC | GEN4 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Set Frequency",
        key = "eps_set_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3081,
        scale = { 0: "50",
                  1: "60", },
        allowedtypes = HYBRID | AC | GEN4 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Discharge Max Power",
        key = "battery_discharge_max_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        register = 3094,
        unit = REGISTER_U32,
        scale = 0.1,
        allowedtypes = HYBRID | AC | GEN4,
        entity_registry_enabled_default = False,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Charge Max Power",
        key = "battery_charge_max_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        register = 3096,
        unit = REGISTER_U32,
        scale = 0.1,
        allowedtypes = HYBRID | AC | GEN4,
        entity_registry_enabled_default = False,
    ),
    ###
    #
    # Input registers
    #
    ###
    GrowattModbusSensorEntityDescription(
        name = "PV Power Total",
        key = "pv_power_total",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 1",
        key = "pv_voltage_1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 1",
        key = "pv_current_1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 4,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 1",
        key = "pv_power_1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 5,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 2",
        key = "pv_voltage_2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 7,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 2",
        key = "pv_current_2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 8,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 2",
        key = "pv_power_2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 9,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 3",
        key = "pv_voltage_3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 11,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | ALL_MPPT_GROUP,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 3",
        key = "pv_current_3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 12,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | ALL_MPPT_GROUP,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 3",
        key = "pv_power_3",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 13,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | ALL_MPPT_GROUP,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 4",
        key = "pv_voltage_4",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 15,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT4 | MPPT6 | MPPT8 | MPPT10,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 4",
        key = "pv_current_4",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 16,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT4 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 4",
        key = "pv_power_4",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 17,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT4 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 5",
        key = "pv_voltage_5",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 19,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 5",
        key = "pv_current_5",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 20,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 5",
        key = "pv_power_5",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 21,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 6",
        key = "pv_voltage_6",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 23,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 6",
        key = "pv_current_6",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 24,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 6",
        key = "pv_power_6",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 25,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 7",
        key = "pv_voltage_7",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 27,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 7",
        key = "pv_current_7",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 28,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 7",
        key = "pv_power_7",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 29,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 8",
        key = "pv_voltage_8",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 31,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 8",
        key = "pv_current_8",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 32,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 8",
        key = "pv_power_8",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Output Power",
        key = "output_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 35,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Frequency",
        key = "grid_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        device_class = SensorDeviceClass.FREQUENCY,
        register = 37,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage",
        key = "inverter_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 38,
        scale = 0.1,
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L1",
        key = "grid_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 38,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current",
        key = "grid_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 39,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L1",
        key = "grid_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 39,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power",
        key = "grid_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 40,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L1",
        key = "grid_power_l1",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 40,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L2",
        key = "grid_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 42,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3| X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L2",
        key = "grid_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 43,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L2",
        key = "grid_power_l2",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 44,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L3",
        key = "grid_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 46,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L3",
        key = "grid_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 47,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L3",
        key = "grid_power_l3",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 48,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Power Generation",
        key = "today_power_generation",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 53,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Power Generation",
        key = "total_power_generation",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 55,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Work Time",
        key = "total_work_time",
        native_unit_of_measurement = UnitOfTime.SECONDS,
        device_class = SensorDeviceClass.DURATION,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 57,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.5,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:timelapse",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV1 Solar Energy",
        key = "today_pv1_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 59,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV1 Solar Energy",
        key = "total_pv1_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 61,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV2 Solar Energy",
        key = "today_pv2_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 63,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV2 Solar Energy",
        key = "total_pv2_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 65,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV3 Solar Energy",
        key = "today_pv3_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 67,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | ALL_MPPT_GROUP,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV3 Solar Energy",
        key = "total_pv3_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 69,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | ALL_MPPT_GROUP,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV4 Solar Energy",
        key = "today_pv4_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 71,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT4 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV4 Solar Energy",
        key = "total_pv4_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 73,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT4 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV5 Solar Energy",
        key = "today_pv5_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 75,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV5 Solar Energy",
        key = "total_pv5_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 77,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV6 Solar Energy",
        key = "today_pv6_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 79,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV6 Solar Energy",
        key = "total_pv6_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 81,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT6 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV7 Solar Energy",
        key = "today_pv7_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 83,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV7 Solar Energy",
        key = "total_pv7_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 85,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV8 Solar Energy",
        key = "today_pv8_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 87,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV8 Solar Energy",
        key = "total_pv8_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 89,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3 | X3 | MPPT8 | MPPT10,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Solar Energy",
        key = "today_solar_energy",
        value_function= value_function_today_solar_energy,
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power",
    ), 
    GrowattModbusSensorEntityDescription(
        name = "Total Solar Energy",
        key = "total_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 91,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Inverter Temperature",
        key = "inverter_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 93,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "IPM Inverter Temperature",
        key = "ipm_inverter_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 94,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Boost Temperature",
        key = "boost_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 95,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Voltage",
        key = "battery_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 97,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | GEN3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Priority",
        key = "priority",
        register = 118,
        scale = { 0: "Load",
                  1: "Battery",
                  2: "Grid", },
        register_type = REG_INPUT,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:run",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Type",
        key = "battery_type",
        register = 119,
        scale = { 0: "Lead-Acid",
                  1: "Lithium", },
        register_type = REG_INPUT,
        allowedtypes = GEN2 | GEN3,
        entity_registry_enabled_default = False,
        icon = "mdi:run",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Run Mode",
        key = "run_mode",
        register = 1000,
        scale = { 0: "Waiting",
                  1: "Self Test",
                  3: "Permanent Fault Mode",
                  4: "Update Mode",
                  5: "PV Bat Online",
                  6: "Bat Online",
                  8: "Normal Mode", },
        register_type = REG_INPUT,
        allowedtypes = GEN | GEN2,
        icon = "mdi:run",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Discharge Power",
        key = "battery_discharge_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        scale = 0.1,
        register = 1009,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-arrow-down",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Charge Power",
        key = "battery_charge_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        scale = 0.1,
        register = 1011,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-arrow-up-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Combined Power",
        key = "bettery_combined_power",
        value_function= value_function_combined_battery_power,
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        allowedtypes = GEN2 | GEN3,
        icon = "mdi:battery",
    ),       
    # duplicate of register 97
    #GrowattModbusSensorEntityDescription(
    #    name = "Battery Voltage",
    #    key = "battery_voltage",
    #    native_unit_of_measurement = UnitOfElectricPotential.VOLT,
    #    device_class = SensorDeviceClass.VOLTAGE,
    #    register = 1013,
    #    register_type = REG_INPUT,
    #    scale = 0.1,
    #    rounding = 1,
    #    allowedtypes = GEN | HYBRID,
    #),
    GrowattModbusSensorEntityDescription(
        name = "Battery SOC",
        key = "battery_soc",
        native_unit_of_measurement = PERCENTAGE,
        device_class = SensorDeviceClass.BATTERY,
        register = 1014,
        register_type = REG_INPUT,
        allowedtypes = GEN | GEN2,
    ),
    GrowattModbusSensorEntityDescription(
        name = "AC Power to Grid L1",
        key = "ac_power_to_grid_l1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1023,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "AC Power to Grid L2",
        key = "ac_power_to_grid_l2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1025,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "AC Power to Grid L3",
        key = "ac_power_to_grid_l3",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1027,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "AC Power to Grid Total",
        key = "ac_power_to_grid_total",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1029,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "House Load",
        key = "house_load",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1031,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X1,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "House Load L1",
        key = "house_load_l1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1031,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "House Load L2",
        key = "house_load_l2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1033,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "House Load L3",
        key = "house_load_l3",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1035,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | X3,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total House Load",
        key = "total_house_load",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1037,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Temperature",
        key = "battery_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1040,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Grid Import",
        key = "today_grid_import",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1044,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home-import-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Grid Import",
        key = "total_grid_import",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1046,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-import-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Grid Export",
        key = "today_grid_export",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1048,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home-export-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Grid Export",
        key = "total_grid_export",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1050,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:home-export-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Battery Output Energy",
        key = "today_battery_output_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1052,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-arrow-down",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Battery Output Energy",
        key = "total_battery_output_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1054,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-arrow-down",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Battery Input Energy",
        key = "today_battery_input_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1056,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:battery-arrow-up",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Battery Input Energy",
        key = "total_battery_input_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1058,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-arrow-up",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Load",
        key = "today_load",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1060,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Load",
        key = "total_load",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1062,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Frequency",
        key = "eps_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1067,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = GEN | GEN2 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage",
        key = "eps_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1068,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current",
        key = "eps_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 1069,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power",
        key = "eps_power",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 1070,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L1",
        key = "eps_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1068,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L1",
        key = "eps_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 1069,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L1",
        key = "eps_power_l1",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 1070,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L2",
        key = "eps_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1072,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L2",
        key = "eps_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 1073,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L2",
        key = "eps_power_l2",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 1074,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L3",
        key = "eps_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1076,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L3",
        key = "eps_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 1077,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L3",
        key = "eps_power_l3",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 1078,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Loading",
        key = "eps_loading",
        native_unit_of_measurement = PERCENTAGE,
        register = 1080,
        register_type = REG_INPUT,
        allowedtypes = GEN | GEN2 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "System Electric Energy Today",
        key = "today_system_electric_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1137,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "System Electric Energy Total",
        key = "total_system_electric_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1139,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Self Electric Energy Today",
        key = "today_self_electric_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1141,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Self Electric Energy Total",
        key = "total_self_electric_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 1143,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        entity_registry_enabled_default = False,
        icon = "mdi:transmission-tower",
    ),
    GrowattModbusSensorEntityDescription(
        name = "System Power",
        key = "system_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1145,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Self Power",
        key = "self_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 1147,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN | GEN2,
        icon = "mdi:home",
    ),

    # TL-X TL-XH
    GrowattModbusSensorEntityDescription(
        name = "Total PV Power",
        key = "total_pv_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3001,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 1",
        key = "pv_voltage_1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3003,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 1",
        key = "pv_current_1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3004,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 1",
        key = "pv_power_1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3005,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 2",
        key = "pv_voltage_2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3007,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 2",
        key = "pv_current_2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3008,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 2",
        key = "pv_power_2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3009,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 3",
        key = "pv_voltage_3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3011,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | ALL_MPPT_GROUP,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 3",
        key = "pv_current_3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3012,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | ALL_MPPT_GROUP,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 3",
        key = "pv_power_3",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3013,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | ALL_MPPT_GROUP,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 4",
        key = "pv_voltage_4",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3015,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | MPPT4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 4",
        key = "pv_current_4",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3016,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | MPPT4,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 4",
        key = "pv_power_4",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3017,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | MPPT4,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power",
        key = "grid_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3023,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Grid Power",
        key = "total_grid_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3023,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Frequency",
        key = "grid_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        device_class = SensorDeviceClass.FREQUENCY,
        register = 3025,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage",
        key = "inverter_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3026,
        scale = 0.1,
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes = GEN4 | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L1",
        key = "grid_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3026,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current",
        key = "grid_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3027,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L1",
        key = "grid_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3027,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power VA",
        key = "grid_power_va",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3028,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L1",
        key = "grid_power_l1",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3028,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L2",
        key = "grid_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3030,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L2",
        key = "grid_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3031,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L2",
        key = "grid_power_l2",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3032,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Voltage L3",
        key = "grid_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3034,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Current L3",
        key = "grid_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3035,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Grid Power L3",
        key = "grid_power_l3",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3036,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Forward Power",
        key = "total_forward_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3041,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Reverse Power",
        key = "total_reverse_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3043,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Load Power",
        key = "total_load_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3045,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN4 | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Power Generation",
        key = "today_power_generation",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3049,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Power Generation",
        key = "total_power_generation",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3051,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Solar Energy",
        key = "today_solar_energy",
        value_function= value_function_today_solar_energy,
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        allowedtypes = GEN4,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Solar Energy",
        key = "total_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3053,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV1 Solar Energy",
        key = "today_pv1_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3055,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV1 Solar Energy",
        key = "total_pv1_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3057,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV2 Solar Energy",
        key = "today_pv2_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3059,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV2 Solar Energy",
        key = "total_pv2_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3061,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's PV3 Solar Energy",
        key = "today_pv3_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3063,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | ALL_MPPT_GROUP,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total PV3 Solar Energy",
        key = "total_pv3_solar_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3065,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | X3 | ALL_MPPT_GROUP,
        entity_registry_enabled_default = False,
        icon = "mdi:solar-power",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Grid Import",
        key = "today_grid_import",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3067,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:home-import-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Grid Import",
        key = "total_grid_import",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3069,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:home-import-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Grid Export",
        key = "today_grid_export",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3071,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:home-export-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Grid Export",
        key = "total_grid_export",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3073,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:home-export-outline",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Yield",
        key = "today_yield",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3075,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Yield",
        key = "total_yield",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3077,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Inverter Temperature",
        key = "inverter_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3093,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "IPM Inverter Temperature",
        key = "ipm_inverter_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3094,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Boost Temperature",
        key = "boost_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3095,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Battery Output Energy",
        key = "today_battery_output_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3125,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:battery-arrow-down",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Battery Output Energy",
        key = "total_battery_output_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3127,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-arrow-down",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Today's Battery Input Energy",
        key = "today_battery_input_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3129,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        icon = "mdi:battery-arrow-up",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Total Battery Input Energy",
        key = "total_battery_input_energy",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 3131,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4,
        entity_registry_enabled_default = False,
        icon = "mdi:battery-arrow-up",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Work Mode - Priority",
        key = "work_mode_priority",
        register = 3144,
        scale = { 0: "Load First",
                  1: "Battery First",
                  2: "Grid Grid", },
        register_type = REG_INPUT,
        allowedtypes = GEN4,
        icon = "mdi:run",
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Frequency",
        key = "eps_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3145,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = GEN4 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage",
        key = "eps_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3146,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L1",
        key = "eps_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3146,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current",
        key = "eps_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3147,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L1",
        key = "eps_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3147,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power",
        key = "eps_power",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 3148,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X1,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L1",
        key = "eps_power_l1",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 3148,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L2",
        key = "eps_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3150,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L2",
        key = "eps_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3151,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L2",
        key = "eps_power_l2",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 3152,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Voltage L3",
        key = "eps_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3154,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Current L3",
        key = "eps_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3155,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Power L3",
        key = "eps_power_l3",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 3156,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Total Power",
        key = "eps_total_power",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        register = 3158,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | EPS | X3,
    ),
    GrowattModbusSensorEntityDescription(
        name = "EPS Loading",
        key = "eps_loading",
        native_unit_of_measurement = PERCENTAGE,
        register = 3160,
        register_type = REG_INPUT,
        allowedtypes = GEN4 | EPS,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Voltage",
        key = "battery_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 3169,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = GEN4 | HYBRID,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Current",
        key = "battery_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 3170,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | HYBRID,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery SOC",
        key = "battery_soc",
        native_unit_of_measurement = PERCENTAGE,
        device_class = SensorDeviceClass.BATTERY,
        register = 3171,
        register_type = REG_INPUT,
        allowedtypes = GEN4 | HYBRID,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Discharge Power",
        key = "battery_discharge_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3178,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | HYBRID,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Charge Power",
        key = "battery_charge_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3180,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN4 | HYBRID,
    ),
#####
#
# SPF
# 
#####
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 1",
        key = "pv_voltage_1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 1,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Voltage 2",
        key = "pv_voltage_2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 2,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
    ),  
    GrowattModbusSensorEntityDescription(
        name = "PV Power 1",
        key = "pv_power_1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 3,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Power 2",
        key = "pv_power_2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 5,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
        icon = "mdi:solar-power-variant",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 1",
        key = "pv_current_1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 7,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "PV Current 2",
        key = "pv_current_2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 8,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = SPF,
        icon = "mdi:current-dc",
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery Voltage",
        key = "battery_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 17,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = SPF,
    ),
    GrowattModbusSensorEntityDescription(
        name = "Battery SOC",
        key = "battery_soc",
        native_unit_of_measurement = PERCENTAGE,
        device_class = SensorDeviceClass.BATTERY,
        register = 18,
        register_type = REG_INPUT,
        allowedtypes = SPF,
    ),
]

# ============================ plugin declaration =================================================

@dataclass
class growatt_plugin(plugin_base):
    
    """
    def isAwake(self, datadict):
        return (datadict.get('run_mode', None) == 'Normal Mode')

    def wakeupButton(self):
        return 'battery_awaken'
    """


    def determineInverterType(self, hub, configdict):
        _LOGGER.info(f"{hub.name}: trying to determine inverter type")
        seriesnumber                       = _read_serialnr(hub, 9)
        if not seriesnumber:
            _LOGGER.info(f"{hub.name}: trying alternative location")
            seriesnumber                       = _read_serialnr(hub, 3001)
        if not seriesnumber:
            _LOGGER.error(f"{hub.name}: cannot find firmware version, even not for other Inverter")
            seriesnumber = "unknown"

        # derive invertertype from seriiesnumber
        #if seriesnumber.startswith('TLX'):  invertertype = PV | GEN4 | X1 # PV TL-X 2.5kW - 6kW
        if seriesnumber.startswith('GH1'):  invertertype = PV | GEN4 | X1 # PV TL-X 2.5kW - 6kW
        elif seriesnumber.startswith('AL1'):  invertertype = HYBRID | GEN4 | X1 # Hybrid TL-XH 2.5kW - 6kW
        elif seriesnumber.startswith('DL1'):  invertertype = PV | GEN3 | X3 # PV KTL3-X 15kW 3Phase (MOD)
        elif seriesnumber.startswith('DM1'):  invertertype = PV | GEN3 | X3 | MPPT4 # PV KTL3-X 35kW 3Phase (MID)
        #elif seriesnumber.startswith('MID'):  invertertype = PV | GEN3 | X3 | MPPT3 # PV X3 2MPPT 15-25kW, 3/4 MPPT 25-40kW & 30-50kW
        #elif seriesnumber.startswith('MAC'):  invertertype = PV | GEN3 | X3 # PV X3 3MPPT 50-70kW
        #elif seriesnumber.startswith('MAX'):  invertertype = PV | GEN3 | X3 # PV X3 6/7MPPT 50-80kW, 8 MPPT 100-150kW & 10 MPPT 100-150kW
        elif seriesnumber.startswith('DN1'):  invertertype = HYBRID | GEN3 | X3 # Hybrid KTL3-XH 2.5kW - 6kW
        elif seriesnumber.startswith('RAA'):  invertertype = HYBRID | GEN2 | X1 # Hybrid SPH 3kW - 6kW
        elif seriesnumber.startswith('RA1'):  invertertype = HYBRID | GEN2 | X1 # Hybrid SPH 3kW - 6kW
        elif seriesnumber.startswith('YA1'):  invertertype = HYBRID | GEN2 | X3 # Hybrid SPH 4kW - 10kW 3P TL UP
        elif seriesnumber.startswith('SPH'):  invertertype = HYBRID | GEN2 | X3 # Hybrid SPH 4kW - 10kW
        elif seriesnumber.startswith('AH1'):  invertertype = PV | GEN2 | X1 # Hybrid SPH 4kW - 10kW
        elif seriesnumber.startswith('067'):  invertertype = HYBRID | SPF | X1 # Hybrid SPF 3kW - ?kW
        #elif seriesnumber.startswith('SPA'):  invertertype = AC | GEN | X3 # AC SPA 4kW - 10kW

        else: 
            invertertype = 0
            _LOGGER.error(f"unrecognized {hub.name} inverter type - firmware version : {seriesnumber}")
        read_eps = configdict.get(CONF_READ_EPS, DEFAULT_READ_EPS)
        read_dcb = configdict.get(CONF_READ_DCB, DEFAULT_READ_DCB)
        if read_eps: invertertype = invertertype | EPS 
        if read_dcb: invertertype = invertertype | DCB
        return invertertype

    def matchInverterWithMask (self, inverterspec, entitymask, serialnumber = 'not relevant', blacklist = None):
        # returns true if the entity needs to be created for an inverter
        genmatch = ((inverterspec & entitymask & ALL_GEN_GROUP)  != 0) or (entitymask & ALL_GEN_GROUP  == 0)
        xmatch   = ((inverterspec & entitymask & ALL_X_GROUP)    != 0) or (entitymask & ALL_X_GROUP    == 0)
        hybmatch = ((inverterspec & entitymask & ALL_TYPE_GROUP) != 0) or (entitymask & ALL_TYPE_GROUP == 0)
        epsmatch = ((inverterspec & entitymask & ALL_EPS_GROUP)  != 0) or (entitymask & ALL_EPS_GROUP  == 0)
        dcbmatch = ((inverterspec & entitymask & ALL_DCB_GROUP)  != 0) or (entitymask & ALL_DCB_GROUP  == 0)
        mpptmatch = ((inverterspec & entitymask & ALL_MPPT_GROUP)  != 0) or (entitymask & ALL_MPPT_GROUP  == 0)
        blacklisted = False
        if blacklist:
            for start in blacklist: 
                if serialnumber.startswith(start) : blacklisted = True
        return (genmatch and xmatch and hybmatch and epsmatch and dcbmatch and mpptmatch) and not blacklisted


plugin_instance = growatt_plugin(
    plugin_name = 'growatt', 
    SENSOR_TYPES = SENSOR_TYPES,
    NUMBER_TYPES = NUMBER_TYPES,
    BUTTON_TYPES = BUTTON_TYPES,
    SELECT_TYPES = SELECT_TYPES, 
    block_size = 100,
    order16 = Endian.BIG,
    order32 = Endian.BIG,
    )
